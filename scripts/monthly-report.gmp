from terminaltables import AsciiTable
from datetime import date, timedelta

month = int(args.script[1])
year = int(args.script[2])
from_date = date(year, month, 1)
to_date = from_date + timedelta(days=31)
# To have the first day in month
to_date = to_date.replace(day=1)

report_filter = "rows=-1 and created>{0} and created<{1}".format(from_date.isoformat(), to_date.isoformat())
reports_xml = gmp.get_reports(report_filter=report_filter)
report_list = reports_xml.xpath('report')

sum_high = reports_xml.xpath('sum(report/report/result_count/hole/full/text())')
sum_medium = reports_xml.xpath('sum(report/report/result_count/warning/full/text())')
sum_low = reports_xml.xpath('sum(report/report/result_count/info/full/text())')


print('Found {0} reports'.format(len(report_list)))

if 'with-table' in args.script:
    for report in report_list:
        report_id = report.xpath('report/@id')[0]
        timestamp = report.xpath('report/timestamp/text()')[0]
        name = report.xpath('name/text()')[0]

        res = gmp.get_reports(report_id=report_id)

        print('\nReport: {0}'.format(report_id))
        table_data = [['Hostname', 'IP', 'Bericht', 'high', 'medium', 'low']]
        for host in res.xpath('report/report/host'):
            hostname = host.xpath('detail/name[text()="hostname"]/../value/text()')
            if len(hostname) > 0:
                hostname = str(hostname[0])
            else:
                hostname = ""

            ip = host.xpath('ip/text()')[0]
            high = host.xpath('result_count/hole/page/text()')[0]
            medium = host.xpath('result_count/warning/page/text()')[0]
            low = host.xpath('result_count/info/page/text()')[0]

            table_data.append([hostname, ip, name, high, medium, low])
            host.clear()
            del host
        table = AsciiTable(table_data)
        print(table.table + '\n')
        res.clear()
        del res

print("Summary of results from {3} to {4}\nHigh: {0}\nMedium: {1}\nLow: {2}\n\n"
      .format(int(sum_high), int(sum_medium), int(sum_low), from_date.isoformat(), to_date.isoformat()))
