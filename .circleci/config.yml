version: 2.1

executors:
  python-35:
    docker:
      - image: circleci/python:3.5
        environment:
            PIPENV_VENV_IN_PROJECT: true
    working_directory: ~/repo
  python-36:
    docker:
      - image: circleci/python:3.6
        environment:
            PIPENV_VENV_IN_PROJECT: true
    working_directory: ~/repo
  python-37:
    docker:
      - image: circleci/python:3.7
        environment:
            PIPENV_VENV_IN_PROJECT: true
    working_directory: ~/repo

commands:
  build:
    description: "Download, cache dependencies and build"
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ .Environment.PYTHON_VERSION }}-{{ checksum "Pipfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-{{ .Environment.PYTHON_VERSION }}
      - run:
          name: Install dependencies
          command: |
            pipenv install
      - save_cache:
          paths:
            - ./.venv
          key: v1-dependencies-{{ .Environment.PYTHON_VERSION }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Install GVM-Tools
          command: |
            pipenv install .
  test:
    description: "Download, cache dependencies and run tests"
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ .Environment.PYTHON_VERSION }}-{{ checksum "Pipfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-{{ .Environment.PYTHON_VERSION }}
      - run:
          name: Install dependencies
          command: pipenv install --dev
      - save_cache:
          paths:
            - ./.venv
          key: v1-dependencies-{{ .Environment.PYTHON_VERSION }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Install codecov
          command: |
            pipenv install codecov
      - run:
          name: Run unit tests
          command: |
            pipenv run coverage run -m unittest
      - run:
          name: Upload coverage to Codecov
          command: pipenv run codecov

jobs:
  build-35:
    executor: python-35
    environment:
      VERSION: 3.5
    steps:
      - build
  test-35:
    executor: python-35
    environment:
      VERSION: 3.5
    steps:
      - test
  build-36:
    executor: python-36
    environment:
      VERSION: 3.6
    steps:
      - build
  test-36:
    executor: python-36
    environment:
      VERSION: 3.6
    steps:
      - test
  build-37:
    executor: python-37
    environment:
      VERSION: 3.7
    steps:
      - build
  test-37:
    executor: python-37
    environment:
      VERSION: 3.7
    steps:
      - test

workflows:
  version: 2
  build_and_test:
    jobs:
      - build-35
      - test-35
      - build-36
      - test-36
      - build-37
      - test-37
